// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: backend_services.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_OK                    Status = 0
	Status_NOT_FOUND             Status = 1
	Status_ERROR                 Status = 2
	Status_CONFLICT              Status = 3
	Status_INVALID_ATTESTATION   Status = 4
	Status_INVALID_AUTHORIZATION Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "ERROR",
		3: "CONFLICT",
		4: "INVALID_ATTESTATION",
		5: "INVALID_AUTHORIZATION",
	}
	Status_value = map[string]int32{
		"OK":                    0,
		"NOT_FOUND":             1,
		"ERROR":                 2,
		"CONFLICT":              3,
		"INVALID_ATTESTATION":   4,
		"INVALID_AUTHORIZATION": 5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_services_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_backend_services_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{0}
}

type QueryType int32

const (
	QueryType_SINGLE_RECORD_BY_ID_SCHEMA_URI QueryType = 0
	QueryType_SINGLE_RECORD_BY_ID_FOR_COMMIT QueryType = 1
)

// Enum value maps for QueryType.
var (
	QueryType_name = map[int32]string{
		0: "SINGLE_RECORD_BY_ID_SCHEMA_URI",
		1: "SINGLE_RECORD_BY_ID_FOR_COMMIT",
	}
	QueryType_value = map[string]int32{
		"SINGLE_RECORD_BY_ID_SCHEMA_URI": 0,
		"SINGLE_RECORD_BY_ID_FOR_COMMIT": 1,
	}
)

func (x QueryType) Enum() *QueryType {
	p := new(QueryType)
	*p = x
	return p
}

func (x QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_services_proto_enumTypes[1].Descriptor()
}

func (QueryType) Type() protoreflect.EnumType {
	return &file_backend_services_proto_enumTypes[1]
}

func (x QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryType.Descriptor instead.
func (QueryType) EnumDescriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{1}
}

type RecordEventType int32

const (
	RecordEventType_RECORD_CREATED RecordEventType = 0
	RecordEventType_RECORD_CHANGED RecordEventType = 1
	RecordEventType_RECORD_DELETED RecordEventType = 2
)

// Enum value maps for RecordEventType.
var (
	RecordEventType_name = map[int32]string{
		0: "RECORD_CREATED",
		1: "RECORD_CHANGED",
		2: "RECORD_DELETED",
	}
	RecordEventType_value = map[string]int32{
		"RECORD_CREATED": 0,
		"RECORD_CHANGED": 1,
		"RECORD_DELETED": 2,
	}
)

func (x RecordEventType) Enum() *RecordEventType {
	p := new(RecordEventType)
	*p = x
	return p
}

func (x RecordEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_services_proto_enumTypes[2].Descriptor()
}

func (RecordEventType) Type() protoreflect.EnumType {
	return &file_backend_services_proto_enumTypes[2]
}

func (x RecordEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordEventType.Descriptor instead.
func (RecordEventType) EnumDescriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{2}
}

type HookDefinition_HookChannel int32

const (
	HookDefinition_HTTP_CALLBACK HookDefinition_HookChannel = 0
	HookDefinition_GRPC_CALLBACK HookDefinition_HookChannel = 1
)

// Enum value maps for HookDefinition_HookChannel.
var (
	HookDefinition_HookChannel_name = map[int32]string{
		0: "HTTP_CALLBACK",
		1: "GRPC_CALLBACK",
	}
	HookDefinition_HookChannel_value = map[string]int32{
		"HTTP_CALLBACK": 0,
		"GRPC_CALLBACK": 1,
	}
)

func (x HookDefinition_HookChannel) Enum() *HookDefinition_HookChannel {
	p := new(HookDefinition_HookChannel)
	*p = x
	return p
}

func (x HookDefinition_HookChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HookDefinition_HookChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_backend_services_proto_enumTypes[3].Descriptor()
}

func (HookDefinition_HookChannel) Type() protoreflect.EnumType {
	return &file_backend_services_proto_enumTypes[3]
}

func (x HookDefinition_HookChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HookDefinition_HookChannel.Descriptor instead.
func (HookDefinition_HookChannel) EnumDescriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{11, 0}
}

type CommonStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.Status" json:"status,omitempty"`
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CommonStatus) Reset() {
	*x = CommonStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonStatus) ProtoMessage() {}

func (x *CommonStatus) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonStatus.ProtoReflect.Descriptor instead.
func (*CommonStatus) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{0}
}

func (x *CommonStatus) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *CommonStatus) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type StoreRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StoreRecordRequest) Reset() {
	*x = StoreRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRecordRequest) ProtoMessage() {}

func (x *StoreRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRecordRequest.ProtoReflect.Descriptor instead.
func (*StoreRecordRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{1}
}

func (x *StoreRecordRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type StoreRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RecordId     string        `protobuf:"bytes,2,opt,name=recordId,proto3" json:"recordId,omitempty"`
	OwnerDID     string        `protobuf:"bytes,3,opt,name=ownerDID,proto3" json:"ownerDID,omitempty"`
	InitialEntry bool          `protobuf:"varint,4,opt,name=initialEntry,proto3" json:"initialEntry,omitempty"`
}

func (x *StoreRecordResponse) Reset() {
	*x = StoreRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRecordResponse) ProtoMessage() {}

func (x *StoreRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRecordResponse.ProtoReflect.Descriptor instead.
func (*StoreRecordResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{2}
}

func (x *StoreRecordResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *StoreRecordResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *StoreRecordResponse) GetOwnerDID() string {
	if x != nil {
		return x.OwnerDID
	}
	return ""
}

func (x *StoreRecordResponse) GetInitialEntry() bool {
	if x != nil {
		return x.InitialEntry
	}
	return false
}

type FindRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryType    QueryType `protobuf:"varint,1,opt,name=queryType,proto3,enum=services.QueryType" json:"queryType,omitempty"`
	RecordId     string    `protobuf:"bytes,2,opt,name=recordId,proto3" json:"recordId,omitempty"`
	SchemaURI    string    `protobuf:"bytes,3,opt,name=schemaURI,proto3" json:"schemaURI,omitempty"`
	RequestorDID string    `protobuf:"bytes,4,opt,name=requestorDID,proto3" json:"requestorDID,omitempty"`
}

func (x *FindRecordRequest) Reset() {
	*x = FindRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRecordRequest) ProtoMessage() {}

func (x *FindRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRecordRequest.ProtoReflect.Descriptor instead.
func (*FindRecordRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{3}
}

func (x *FindRecordRequest) GetQueryType() QueryType {
	if x != nil {
		return x.QueryType
	}
	return QueryType_SINGLE_RECORD_BY_ID_SCHEMA_URI
}

func (x *FindRecordRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *FindRecordRequest) GetSchemaURI() string {
	if x != nil {
		return x.SchemaURI
	}
	return ""
}

func (x *FindRecordRequest) GetRequestorDID() string {
	if x != nil {
		return x.RequestorDID
	}
	return ""
}

type FindRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SchemaURI   string        `protobuf:"bytes,2,opt,name=schemaURI,proto3" json:"schemaURI,omitempty"`
	Writers     []string      `protobuf:"bytes,3,rep,name=writers,proto3" json:"writers,omitempty"`
	Readers     []string      `protobuf:"bytes,4,rep,name=readers,proto3" json:"readers,omitempty"`
	IsPublished bool          `protobuf:"varint,5,opt,name=isPublished,proto3" json:"isPublished,omitempty"`
	RecordItem  []byte        `protobuf:"bytes,6,opt,name=recordItem,proto3" json:"recordItem,omitempty"`
}

func (x *FindRecordResponse) Reset() {
	*x = FindRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRecordResponse) ProtoMessage() {}

func (x *FindRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRecordResponse.ProtoReflect.Descriptor instead.
func (*FindRecordResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{4}
}

func (x *FindRecordResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FindRecordResponse) GetSchemaURI() string {
	if x != nil {
		return x.SchemaURI
	}
	return ""
}

func (x *FindRecordResponse) GetWriters() []string {
	if x != nil {
		return x.Writers
	}
	return nil
}

func (x *FindRecordResponse) GetReaders() []string {
	if x != nil {
		return x.Readers
	}
	return nil
}

func (x *FindRecordResponse) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *FindRecordResponse) GetRecordItem() []byte {
	if x != nil {
		return x.RecordItem
	}
	return nil
}

type CreateSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSchemaRequest) Reset() {
	*x = CreateSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSchemaRequest) ProtoMessage() {}

func (x *CreateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSchemaRequest.ProtoReflect.Descriptor instead.
func (*CreateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{5}
}

type CreateSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateSchemaResponse) Reset() {
	*x = CreateSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSchemaResponse) ProtoMessage() {}

func (x *CreateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSchemaResponse.ProtoReflect.Descriptor instead.
func (*CreateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSchemaResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ValidateRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaURI string `protobuf:"bytes,1,opt,name=schemaURI,proto3" json:"schemaURI,omitempty"`
	Document  []byte `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *ValidateRecordRequest) Reset() {
	*x = ValidateRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRecordRequest) ProtoMessage() {}

func (x *ValidateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRecordRequest.ProtoReflect.Descriptor instead.
func (*ValidateRecordRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateRecordRequest) GetSchemaURI() string {
	if x != nil {
		return x.SchemaURI
	}
	return ""
}

func (x *ValidateRecordRequest) GetDocument() []byte {
	if x != nil {
		return x.Document
	}
	return nil
}

type ValidateRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ValidateRecordResponse) Reset() {
	*x = ValidateRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRecordResponse) ProtoMessage() {}

func (x *ValidateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRecordResponse.ProtoReflect.Descriptor instead.
func (*ValidateRecordResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateRecordResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type InvalidateSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaURI string `protobuf:"bytes,1,opt,name=schemaURI,proto3" json:"schemaURI,omitempty"`
}

func (x *InvalidateSchemaRequest) Reset() {
	*x = InvalidateSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateSchemaRequest) ProtoMessage() {}

func (x *InvalidateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateSchemaRequest.ProtoReflect.Descriptor instead.
func (*InvalidateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{9}
}

func (x *InvalidateSchemaRequest) GetSchemaURI() string {
	if x != nil {
		return x.SchemaURI
	}
	return ""
}

type InvalidateSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InvalidateSchemaResponse) Reset() {
	*x = InvalidateSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateSchemaResponse) ProtoMessage() {}

func (x *InvalidateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateSchemaResponse.ProtoReflect.Descriptor instead.
func (*InvalidateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{10}
}

func (x *InvalidateSchemaResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// HOOK SERVICE
type HookDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HookId      string                     `protobuf:"bytes,1,opt,name=hookId,proto3" json:"hookId,omitempty"`
	HookChannel HookDefinition_HookChannel `protobuf:"varint,2,opt,name=hookChannel,proto3,enum=services.HookDefinition_HookChannel" json:"hookChannel,omitempty"`
	Uri         string                     `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *HookDefinition) Reset() {
	*x = HookDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookDefinition) ProtoMessage() {}

func (x *HookDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookDefinition.ProtoReflect.Descriptor instead.
func (*HookDefinition) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{11}
}

func (x *HookDefinition) GetHookId() string {
	if x != nil {
		return x.HookId
	}
	return ""
}

func (x *HookDefinition) GetHookChannel() HookDefinition_HookChannel {
	if x != nil {
		return x.HookChannel
	}
	return HookDefinition_HTTP_CALLBACK
}

func (x *HookDefinition) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RegisterHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterHookRequest) Reset() {
	*x = RegisterHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHookRequest) ProtoMessage() {}

func (x *RegisterHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHookRequest.ProtoReflect.Descriptor instead.
func (*RegisterHookRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterHookRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type RegisterHookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RegisterHookResponse) Reset() {
	*x = RegisterHookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterHookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHookResponse) ProtoMessage() {}

func (x *RegisterHookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHookResponse.ProtoReflect.Descriptor instead.
func (*RegisterHookResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterHookResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateHookRequest) Reset() {
	*x = UpdateHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHookRequest) ProtoMessage() {}

func (x *UpdateHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHookRequest.ProtoReflect.Descriptor instead.
func (*UpdateHookRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateHookRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type UpdateHookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateHookResponse) Reset() {
	*x = UpdateHookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHookResponse) ProtoMessage() {}

func (x *UpdateHookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHookResponse.ProtoReflect.Descriptor instead.
func (*UpdateHookResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateHookResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetHookByRecordIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
}

func (x *GetHookByRecordIdRequest) Reset() {
	*x = GetHookByRecordIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookByRecordIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookByRecordIdRequest) ProtoMessage() {}

func (x *GetHookByRecordIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookByRecordIdRequest.ProtoReflect.Descriptor instead.
func (*GetHookByRecordIdRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{16}
}

func (x *GetHookByRecordIdRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type GetHookByRecordIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *CommonStatus   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	HookDefinition *HookDefinition `protobuf:"bytes,2,opt,name=hookDefinition,proto3" json:"hookDefinition,omitempty"`
}

func (x *GetHookByRecordIdResponse) Reset() {
	*x = GetHookByRecordIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHookByRecordIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHookByRecordIdResponse) ProtoMessage() {}

func (x *GetHookByRecordIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHookByRecordIdResponse.ProtoReflect.Descriptor instead.
func (*GetHookByRecordIdResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{17}
}

func (x *GetHookByRecordIdResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetHookByRecordIdResponse) GetHookDefinition() *HookDefinition {
	if x != nil {
		return x.HookDefinition
	}
	return nil
}

type GetHooksForRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId        string `protobuf:"bytes,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
	Protocol        string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ProtocolVersion string `protobuf:"bytes,3,opt,name=protocolVersion,proto3" json:"protocolVersion,omitempty"`
	Schema          string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *GetHooksForRecordRequest) Reset() {
	*x = GetHooksForRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHooksForRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHooksForRecordRequest) ProtoMessage() {}

func (x *GetHooksForRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHooksForRecordRequest.ProtoReflect.Descriptor instead.
func (*GetHooksForRecordRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{18}
}

func (x *GetHooksForRecordRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *GetHooksForRecordRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *GetHooksForRecordRequest) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *GetHooksForRecordRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type GetHooksForRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *CommonStatus     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	HookDefinitions []*HookDefinition `protobuf:"bytes,2,rep,name=hookDefinitions,proto3" json:"hookDefinitions,omitempty"`
}

func (x *GetHooksForRecordResponse) Reset() {
	*x = GetHooksForRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHooksForRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHooksForRecordResponse) ProtoMessage() {}

func (x *GetHooksForRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHooksForRecordResponse.ProtoReflect.Descriptor instead.
func (*GetHooksForRecordResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{19}
}

func (x *GetHooksForRecordResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetHooksForRecordResponse) GetHookDefinitions() []*HookDefinition {
	if x != nil {
		return x.HookDefinitions
	}
	return nil
}

type NotifyHooksOfRecordEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId        string          `protobuf:"bytes,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
	Protocol        string          `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ProtocolVersion string          `protobuf:"bytes,3,opt,name=protocolVersion,proto3" json:"protocolVersion,omitempty"`
	Schema          string          `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	RecordEventType RecordEventType `protobuf:"varint,5,opt,name=recordEventType,proto3,enum=services.RecordEventType" json:"recordEventType,omitempty"`
}

func (x *NotifyHooksOfRecordEventRequest) Reset() {
	*x = NotifyHooksOfRecordEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyHooksOfRecordEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyHooksOfRecordEventRequest) ProtoMessage() {}

func (x *NotifyHooksOfRecordEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyHooksOfRecordEventRequest.ProtoReflect.Descriptor instead.
func (*NotifyHooksOfRecordEventRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{20}
}

func (x *NotifyHooksOfRecordEventRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *NotifyHooksOfRecordEventRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NotifyHooksOfRecordEventRequest) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *NotifyHooksOfRecordEventRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *NotifyHooksOfRecordEventRequest) GetRecordEventType() RecordEventType {
	if x != nil {
		return x.RecordEventType
	}
	return RecordEventType_RECORD_CREATED
}

type NotifyHooksOfRecordEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *NotifyHooksOfRecordEventResponse) Reset() {
	*x = NotifyHooksOfRecordEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyHooksOfRecordEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyHooksOfRecordEventResponse) ProtoMessage() {}

func (x *NotifyHooksOfRecordEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyHooksOfRecordEventResponse.ProtoReflect.Descriptor instead.
func (*NotifyHooksOfRecordEventResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{21}
}

func (x *NotifyHooksOfRecordEventResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type VerifyMessageAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VerifyMessageAttestationRequest) Reset() {
	*x = VerifyMessageAttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageAttestationRequest) ProtoMessage() {}

func (x *VerifyMessageAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageAttestationRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageAttestationRequest) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyMessageAttestationRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type VerifyMessageAttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *CommonStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VerifyMessageAttestationResponse) Reset() {
	*x = VerifyMessageAttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_services_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyMessageAttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageAttestationResponse) ProtoMessage() {}

func (x *VerifyMessageAttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_services_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageAttestationResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageAttestationResponse) Descriptor() ([]byte, []int) {
	return file_backend_services_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyMessageAttestationResponse) GetStatus() *CommonStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_backend_services_proto protoreflect.FileDescriptor

var file_backend_services_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x52, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x44, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x44, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x46,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x52, 0x49, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x52, 0x49, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x44, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x44, 0x49,
	0x44, 0x22, 0xd8, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x55, 0x52, 0x49, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x55, 0x52, 0x49, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x15, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x15, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x52,
	0x49, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55,
	0x52, 0x49, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x48,
	0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x52, 0x49,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x52,
	0x49, 0x22, 0x4a, 0x0a, 0x18, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb7, 0x01,
	0x0a, 0x0e, 0x48, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0b, 0x68, 0x6f, 0x6f, 0x6b,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x22, 0x33, 0x0a, 0x0b, 0x48, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x42, 0x41,
	0x43, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x43, 0x41, 0x4c,
	0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x22, 0x2f, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x2d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x44, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x8d, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0e, 0x68,
	0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48,
	0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x68,
	0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b,
	0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x20, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a,
	0x1f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x20, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x6c,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x2a, 0x53, 0x0a, 0x09,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x49, 0x4e,
	0x47, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44,
	0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x55, 0x52, 0x49, 0x10, 0x00, 0x12, 0x22, 0x0a,
	0x1e, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x42,
	0x59, 0x5f, 0x49, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10,
	0x01, 0x2a, 0x4d, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x43, 0x4f,
	0x52, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x32, 0xad, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0xde, 0x03, 0x0a, 0x0b, 0x48, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b,
	0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x4f, 0x66, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x4f,
	0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0x81, 0x01, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x73, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x69,
	0x6f, 0x2f, 0x64, 0x77, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_backend_services_proto_rawDescOnce sync.Once
	file_backend_services_proto_rawDescData = file_backend_services_proto_rawDesc
)

func file_backend_services_proto_rawDescGZIP() []byte {
	file_backend_services_proto_rawDescOnce.Do(func() {
		file_backend_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_services_proto_rawDescData)
	})
	return file_backend_services_proto_rawDescData
}

var file_backend_services_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_backend_services_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_backend_services_proto_goTypes = []interface{}{
	(Status)(0),                              // 0: services.Status
	(QueryType)(0),                           // 1: services.QueryType
	(RecordEventType)(0),                     // 2: services.RecordEventType
	(HookDefinition_HookChannel)(0),          // 3: services.HookDefinition.HookChannel
	(*CommonStatus)(nil),                     // 4: services.CommonStatus
	(*StoreRecordRequest)(nil),               // 5: services.StoreRecordRequest
	(*StoreRecordResponse)(nil),              // 6: services.StoreRecordResponse
	(*FindRecordRequest)(nil),                // 7: services.FindRecordRequest
	(*FindRecordResponse)(nil),               // 8: services.FindRecordResponse
	(*CreateSchemaRequest)(nil),              // 9: services.CreateSchemaRequest
	(*CreateSchemaResponse)(nil),             // 10: services.CreateSchemaResponse
	(*ValidateRecordRequest)(nil),            // 11: services.ValidateRecordRequest
	(*ValidateRecordResponse)(nil),           // 12: services.ValidateRecordResponse
	(*InvalidateSchemaRequest)(nil),          // 13: services.InvalidateSchemaRequest
	(*InvalidateSchemaResponse)(nil),         // 14: services.InvalidateSchemaResponse
	(*HookDefinition)(nil),                   // 15: services.HookDefinition
	(*RegisterHookRequest)(nil),              // 16: services.RegisterHookRequest
	(*RegisterHookResponse)(nil),             // 17: services.RegisterHookResponse
	(*UpdateHookRequest)(nil),                // 18: services.UpdateHookRequest
	(*UpdateHookResponse)(nil),               // 19: services.UpdateHookResponse
	(*GetHookByRecordIdRequest)(nil),         // 20: services.GetHookByRecordIdRequest
	(*GetHookByRecordIdResponse)(nil),        // 21: services.GetHookByRecordIdResponse
	(*GetHooksForRecordRequest)(nil),         // 22: services.GetHooksForRecordRequest
	(*GetHooksForRecordResponse)(nil),        // 23: services.GetHooksForRecordResponse
	(*NotifyHooksOfRecordEventRequest)(nil),  // 24: services.NotifyHooksOfRecordEventRequest
	(*NotifyHooksOfRecordEventResponse)(nil), // 25: services.NotifyHooksOfRecordEventResponse
	(*VerifyMessageAttestationRequest)(nil),  // 26: services.VerifyMessageAttestationRequest
	(*VerifyMessageAttestationResponse)(nil), // 27: services.VerifyMessageAttestationResponse
}
var file_backend_services_proto_depIdxs = []int32{
	0,  // 0: services.CommonStatus.status:type_name -> services.Status
	4,  // 1: services.StoreRecordResponse.status:type_name -> services.CommonStatus
	1,  // 2: services.FindRecordRequest.queryType:type_name -> services.QueryType
	4,  // 3: services.FindRecordResponse.status:type_name -> services.CommonStatus
	4,  // 4: services.CreateSchemaResponse.status:type_name -> services.CommonStatus
	4,  // 5: services.ValidateRecordResponse.status:type_name -> services.CommonStatus
	4,  // 6: services.InvalidateSchemaResponse.status:type_name -> services.CommonStatus
	3,  // 7: services.HookDefinition.hookChannel:type_name -> services.HookDefinition.HookChannel
	4,  // 8: services.RegisterHookResponse.status:type_name -> services.CommonStatus
	4,  // 9: services.UpdateHookResponse.status:type_name -> services.CommonStatus
	4,  // 10: services.GetHookByRecordIdResponse.status:type_name -> services.CommonStatus
	15, // 11: services.GetHookByRecordIdResponse.hookDefinition:type_name -> services.HookDefinition
	4,  // 12: services.GetHooksForRecordResponse.status:type_name -> services.CommonStatus
	15, // 13: services.GetHooksForRecordResponse.hookDefinitions:type_name -> services.HookDefinition
	2,  // 14: services.NotifyHooksOfRecordEventRequest.recordEventType:type_name -> services.RecordEventType
	4,  // 15: services.NotifyHooksOfRecordEventResponse.status:type_name -> services.CommonStatus
	4,  // 16: services.VerifyMessageAttestationResponse.status:type_name -> services.CommonStatus
	5,  // 17: services.RecordService.StoreRecord:input_type -> services.StoreRecordRequest
	7,  // 18: services.RecordService.FindRecord:input_type -> services.FindRecordRequest
	9,  // 19: services.RecordService.CreateSchema:input_type -> services.CreateSchemaRequest
	11, // 20: services.RecordService.ValidateRecord:input_type -> services.ValidateRecordRequest
	13, // 21: services.RecordService.InvalidateSchema:input_type -> services.InvalidateSchemaRequest
	16, // 22: services.HookService.RegisterHook:input_type -> services.RegisterHookRequest
	18, // 23: services.HookService.UpdateHook:input_type -> services.UpdateHookRequest
	20, // 24: services.HookService.GetHookByRecordId:input_type -> services.GetHookByRecordIdRequest
	22, // 25: services.HookService.GetHooksForRecord:input_type -> services.GetHooksForRecordRequest
	24, // 26: services.HookService.NotifyHooksOfRecordEvent:input_type -> services.NotifyHooksOfRecordEventRequest
	26, // 27: services.KeyService.VerifyMessageAttestation:input_type -> services.VerifyMessageAttestationRequest
	6,  // 28: services.RecordService.StoreRecord:output_type -> services.StoreRecordResponse
	8,  // 29: services.RecordService.FindRecord:output_type -> services.FindRecordResponse
	10, // 30: services.RecordService.CreateSchema:output_type -> services.CreateSchemaResponse
	12, // 31: services.RecordService.ValidateRecord:output_type -> services.ValidateRecordResponse
	14, // 32: services.RecordService.InvalidateSchema:output_type -> services.InvalidateSchemaResponse
	17, // 33: services.HookService.RegisterHook:output_type -> services.RegisterHookResponse
	19, // 34: services.HookService.UpdateHook:output_type -> services.UpdateHookResponse
	21, // 35: services.HookService.GetHookByRecordId:output_type -> services.GetHookByRecordIdResponse
	23, // 36: services.HookService.GetHooksForRecord:output_type -> services.GetHooksForRecordResponse
	25, // 37: services.HookService.NotifyHooksOfRecordEvent:output_type -> services.NotifyHooksOfRecordEventResponse
	27, // 38: services.KeyService.VerifyMessageAttestation:output_type -> services.VerifyMessageAttestationResponse
	28, // [28:39] is the sub-list for method output_type
	17, // [17:28] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_backend_services_proto_init() }
func file_backend_services_proto_init() {
	if File_backend_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backend_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterHookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookByRecordIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHookByRecordIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHooksForRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHooksForRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyHooksOfRecordEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyHooksOfRecordEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMessageAttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_services_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyMessageAttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_services_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_backend_services_proto_goTypes,
		DependencyIndexes: file_backend_services_proto_depIdxs,
		EnumInfos:         file_backend_services_proto_enumTypes,
		MessageInfos:      file_backend_services_proto_msgTypes,
	}.Build()
	File_backend_services_proto = out.File
	file_backend_services_proto_rawDesc = nil
	file_backend_services_proto_goTypes = nil
	file_backend_services_proto_depIdxs = nil
}
