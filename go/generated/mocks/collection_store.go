// Code generated by MockGen. DO NOT EDIT.
// Source: storage/collection_store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storage "github.com/openreserveio/dwn/go/storage"
)

// MockCollectionStore is a mock of CollectionStore interface.
type MockCollectionStore struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionStoreMockRecorder
}

// MockCollectionStoreMockRecorder is the mock recorder for MockCollectionStore.
type MockCollectionStoreMockRecorder struct {
	mock *MockCollectionStore
}

// NewMockCollectionStore creates a new mock instance.
func NewMockCollectionStore(ctrl *gomock.Controller) *MockCollectionStore {
	mock := &MockCollectionStore{ctrl: ctrl}
	mock.recorder = &MockCollectionStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCollectionStore) EXPECT() *MockCollectionStoreMockRecorder {
	return m.recorder
}

// GetCollectionItem mocks base method.
func (m *MockCollectionStore) GetCollectionItem(identifier string) (*storage.CollectionItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCollectionItem", identifier)
	ret0, _ := ret[0].(*storage.CollectionItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCollectionItem indicates an expected call of GetCollectionItem.
func (mr *MockCollectionStoreMockRecorder) GetCollectionItem(identifier interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCollectionItem", reflect.TypeOf((*MockCollectionStore)(nil).GetCollectionItem), identifier)
}

// PutCollectionItem mocks base method.
func (m *MockCollectionStore) PutCollectionItem(collectionItem *storage.CollectionItem) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutCollectionItem", collectionItem)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutCollectionItem indicates an expected call of PutCollectionItem.
func (mr *MockCollectionStoreMockRecorder) PutCollectionItem(collectionItem interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutCollectionItem", reflect.TypeOf((*MockCollectionStore)(nil).PutCollectionItem), collectionItem)
}
